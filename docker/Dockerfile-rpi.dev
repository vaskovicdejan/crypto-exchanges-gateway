FROM resin/armhf-alpine:latest as builder
ARG CROSSBUILD=1
RUN [ "cross-build-start" ]
RUN apk --update add git python build-base nodejs nodejs-npm
WORKDIR /root/
ARG TIMESTAMP=0
RUN echo "$TIMESTAMP" && \
    git clone https://github.com/aloysius-pgast/crypto-exchanges-gateway.git && cd crypto-exchanges-gateway && \
    git checkout develop && \
    npm install --unsafe-perm && cp docker/config.docker.json config/config.json && \
    cd ui && npm install -g webpack && npm install && npm run build && rm -fr node_modules
RUN [ "CROSSBUILD=$CROSSBUILD /bin/bash",  "-Ec", "if [ $CROSSBUILD -eq 1 ] ; then echo 'Calling cross-build-end' ; cross-build-end ; fi" ]

FROM resin/armhf-alpine:latest
ARG CROSSBUILD=1
RUN [ "CROSSBUILD=$CROSSBUILD /bin/bash",  "-Ec", "if [ $CROSSBUILD -eq 1 ] ; then echo 'Calling cross-build-start' ; cross-build-start ; fi" ]
RUN apk --update add nodejs
WORKDIR /root/crypto-exchanges-gateway/
COPY --from=builder /root/crypto-exchanges-gateway .

ENV cfg.auth.apikey ""
ENV cfg.exchanges.poloniex.key ""
ENV cfg.exchanges.poloniex.secret ""
ENV cfg.exchanges.bittrex.key ""
ENV cfg.exchanges.bittrex.secret ""
ENV cfg.exchanges.binance.key ""
ENV cfg.exchanges.binance.secret ""

EXPOSE 8000
EXPOSE 8001
CMD ["node", "./gateway.js"]
RUN [ "CROSSBUILD=$CROSSBUILD /bin/bash",  "-Ec", "if [ $CROSSBUILD -eq 1 ] ; then echo 'Calling cross-build-end' ; cross-build-end ; fi" ]
