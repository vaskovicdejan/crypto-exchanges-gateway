#!/bin/bash

# usage function
function usage()
{
    echo "Usage: $0 [CN]"
    echo "Generate a self-signed certificate"
    echo ""
    echo "    CN: Common name to use in certificate (should be your ip address or a name which resolves to your ip address)"
    exit 1
}
if [ "$1" == "-h" ] || [ "$1" == "--help" ]
then
    usage
fi
if [ -z "$1" ]
then
    usage
fi

# check if openssl binary exists
OPENSSL_BINARY=`which openssl`
if [ $? -ne 0 ]
then
    echo "No openssl binary found !"
    exit 1
fi
OPENSSL_CONFIG=/etc/ssl/openssl.cnf
if ! [ -f $OPENSSL_CONFIG ]
then
    echo "Missing openssl config '$OPENSSL_CONFIG' !"
    exit 1
fi

# common name
COMMON_NAME=$1

# path
MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SSL_DIR=$MY_DIR/../ssl
if ! [ -d $SSL_DIR ]
then
    mkdir -p $SSL_DIR
fi
KEY_FILE=$SSL_DIR/certificate.key
CRT_FILE=$SSL_DIR/certificate.crt

# abort if crt/key file exist
if [ -f "$KEY_FILE" ] || [ -f "$CRT_FILE" ]
then
    echo "Found existing certificate, aborting"
    exit 0
fi

echo -n "Generating certificate.key..."
OUTPUT=`openssl genrsa -out $KEY_FILE 2048 2>&1`
if [ $? -ne 0 ]
then
    echo "ERR"
    echo $OUTPUT
    exit 1
else
    echo "OK"
fi

# generate temporary openssl config
OPENSSL_TMP_CONFIG=$SSL_DIR/openssl.cnf
cat $OPENSSL_CONFIG > $OPENSSL_TMP_CONFIG
SAN_TYPE=DNS
# in case an ip address was provided instead of a DNS
if [[ $1 =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
then
    SAN_TYPE=IP
fi
printf "[SELF_SIGNED]\nsubjectAltName=$SAN_TYPE:$COMMON_NAME\nbasicConstraints=CA:TRUE\n" >> $OPENSSL_TMP_CONFIG

# generate certificate
echo -n "Generating certificate.crt..."
OUTPUT=`openssl req -new -nodes -x509 -key $KEY_FILE -out $CRT_FILE -days 3650 -subj /CN=$COMMON_NAME -reqexts SELF_SIGNED -extensions SELF_SIGNED -config $OPENSSL_TMP_CONFIG`
if [ $? -ne 0 ]
then
    echo "ERR"
    echo $OUTPUT
    exit 1
else
    echo "OK"
    rm $OPENSSL_TMP_CONFIG
fi
